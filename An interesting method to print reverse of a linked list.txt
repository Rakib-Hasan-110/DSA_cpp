#include <iostream>
#include <cstring>

using namespace std;

// Represents node of a linked list
class Node {
public:
	int data;
	Node* next;
	Node(int val)
	{
		data = val;
		next = nullptr;
	}
};

void printReverse(Node* head)
{
	if (!head)
		return;

	printReverse(head->next);

	cout << head->data << " ";
}

Node* push(Node* head, int data)
{
	Node* new_node = new Node(data);
	new_node->next = head;
	head = new_node;

	return head;
}

int printList(Node* head)
{
	// i for finding the length of the list
	int i = 0;
	Node* temp = head;
	while (temp != nullptr) {
		cout << temp->data << " ";
		temp = temp->next;
		i++;
	}

	return i;
}

// Driver code
int main()
{
	/* Start with the empty list */
	Node* head = nullptr;

	// list nodes are as 6 5 4 3 2 1
	head = push(head, 1);
	head = push(head, 2);
	head = push(head, 3);
	head = push(head, 4);
	head = push(head, 5);
	head = push(head, 6);

	cout << "Given linked list: " << endl;
	// printlist print the list and
	// return the size of the list
	int n = printList(head);

	// print reverse list
	cout << "\nReversed Linked list: " << endl;
	printReverse(head);
	cout << endl;

	return 0;
}
