#include <bits/stdc++.h>
using namespace std;

class Node {
public:
	int data;
	Node* next;
};

/* Given a reference (pointer to pointer) to the head 
	of a list and an int, push a new node on the front 
	of the list. */
void push(Node** head_ref, int new_data)
{
	
	Node* new_node = new Node();


	new_node->data = new_data;

	
	new_node->next = (*head_ref);

	
	(*head_ref) = new_node;
}

void printList(Node* head)
{
	Node* temp = head;
	while (temp != NULL) {
		cout << temp->data << " ";
		temp = temp->next;
	}
}

void deleteNode(Node* node)
{
	Node* prev;
	if (node == NULL)
		return;
	else {
		Node* temp = node->next;
		node->data = temp->data;
		node->next = temp->next;
		temp = NULL;
	}
}


int main()
{
	/* Start with the empty list */
	Node* head = NULL;

	/* Use push() to construct below list 
	1->12->1->4->1 */
	push(&head, 1);
	push(&head, 4);
	push(&head, 1);
	push(&head, 12);
	push(&head, 1);

	cout << "Before deleting \n";
	printList(head);

	
	deleteNode(head);

	cout << "\nAfter deleting \n";
	printList(head);
	return 0;
}


