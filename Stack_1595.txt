

#include <bits/stdc++.h>  
using namespace std;

class Stack {
private:
    int arr[5];
    int top;

public:
    Stack() {
        top = -1;
    }

    bool isEmpty() {
        return top == -1;
    }

    bool isFull() {
        return top == 4;
    }

    void push(int x) {
        if (isFull()) {
            // Replace the oldest element (bottom of the stack)
            for (int i = 0; i < 4; i++) {
                arr[i] = arr[i + 1];
            }
            top--;
        }
        arr[++top] = x;
    }

    int pop() {
        if (isEmpty()) {
            cout << "Stack Underflow" << endl;
            return -1; // Or handle underflow differently
        }
        return arr[top--];
    }

    int peek() {
        if (isEmpty()) {
            cout << "Stack Underflow" << endl;
            return -1; // Or handle underflow differently
        }
        return arr[top];
    }
     int count()
    {
        return (top + 1);
    }
     void display()
{
    if (isEmpty())
    {
        cout << "Stack is empty" << endl;
    }
    else
    {
        cout << "All values in the stack are: " << endl;
        for (int i = top; i >= 0; i--)
        {
            cout << arr[i] << endl;
        }
    }
}

};

int main() {
    Stack s;

    while (true) {
            cout << "Enter your choice:\n";
            cout   << "1. Push\n";
            cout   << "2. Pop\n";
            cout   << "3. Peek\n";
            cout    << "4. Check if empty\n";
            cout << "5. count()\n";
            cout << "6. display()\n";
            cout << "7.Clear Screen\n";;
            cout    << "8. Exit\n";

        int choice;
        cin >> choice;

        switch (choice) {
            case 1: {
                int x;
                cout << "Enter element to push: ";
                cin >> x;
                s.push(x);
                break;
            }
            case 2: {
                int popped = s.pop();
                if (popped != -1) {
                    cout << "Popped element: " << popped << endl;
                }
                break;
            }
            case 3: {
                int topElement = s.peek();
                if (topElement != -1) {
                    cout << "Top element: " << topElement << endl;
                }
                break;
            }
            case 4: {
                if (s.isEmpty()) {
                    cout << "Stack is empty.\n";
                } else {
                    cout << "Stack is not empty.\n";
                }
                break;
            }
            case 5:
                cout << "Count function called - Number of items in the stack: " << s.count() << endl;
                break;
            case 6:
               cout << "Display function called - " << endl;
               s.display();
               break;
            case 7:
                system("CLS");
                break;
            case 8: {
                cout << "Exiting...\n";
                return 0;
            }
            default:
                cout << "Invalid choice. Please try again.\n";
        }
    }
}
